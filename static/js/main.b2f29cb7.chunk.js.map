{"version":3,"sources":["todo.webp","App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoVlaue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","src","logo","width","height","alt","className","type","placeholder","required","onChange","e","updateInput","target","onClick","addItem","disabled","length","map","name","checked","deleteItem","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAAe,MAA0B,kCCgG1BA,G,wDA1Fb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAJQ,E,oDAQVC,GACN,GAAe,KAAZA,EAAe,CAChB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GACVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,iCAKNG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAOA,KACpDK,KAAKE,SAAS,CACZT,KAAKU,M,kCAIGG,GACVN,KAAKE,SAAS,CAACV,QAAQc,M,+BAGd,IAAD,OACN,OACE,gCACE,gDACA,qBAAKC,IAAKC,EAAMC,MAAM,MAAMC,OAAO,MAAMC,IAAI,OAAQC,UAAU,SAC/D,sBAAKA,UAAU,YAAf,8BAEI,uBACA,uBAAOC,KAAK,OACZD,UAAU,aACVE,YAAY,eACZC,UAAQ,EACRjB,MAAOE,KAAKT,MAAMC,QAClBwB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOrB,UAEzC,wBACAsB,QAAS,kBAAM,EAAKC,QAAQ,EAAK9B,MAAMC,UACvC8B,UAAWtB,KAAKT,MAAMC,QAAQ+B,OAC9BX,UAAU,UAHV,sBAMA,qBAAKA,UAAU,OAAf,SACI,+BACGZ,KAAKT,MAAME,KAAK+B,KAAI,SAAAnB,GACnB,OACE,+BACE,uBACAQ,KAAK,WACLY,KAAK,SACLC,QAASrB,EAAKN,SAGbM,EAAKP,MACN,wBACAc,UAAU,MACVQ,QAAS,kBAAM,EAAKO,WAAWtB,EAAKV,KAFpC,sBAROU,EAAKV,OAelB,+BACE,uBAAOkB,KAAK,WAAWY,KAAK,GAAG9B,GAAG,KAElC,wBAAQiB,UAAU,SAAlB,sC,GAjFFgB,IAAMC,YCQTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b2f29cb7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/todo.30433f1d.webp\";","import React from \"react\";\nimport logo from \"./todo.webp\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    }\n  }\n\n  addItem(todoVlaue){\n    if(todoVlaue!==\"\"){\n      const newItem = {\n        id: Date.now(),\n        value: todoVlaue,\n        isDone: false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\ndeleteItem(id){\n  const list = [...this.state.list];\n  const updatedlist = list.filter(item => item.id !== id);\n  this.setState({\n    list:updatedlist\n  })\n}\n\nupdateInput(input){\n  this.setState({newItem:input});\n}\n\n  render(){\n    return(\n      <div>\n        <title>My Todo App</title>\n        <img src={logo} width=\"300\" height=\"400\" alt=\"some\"  className=\"logo\"/>\n        <div className=\"container\">\n            Add Todo list....\n            <br></br>\n            <input type=\"text\" \n            className=\"input-text\"\n            placeholder=\"write a todo\"\n            required\n            value={this.state.newItem}\n            onChange={e => this.updateInput(e.target.value)}\n            />\n            <button \n            onClick={() => this.addItem(this.state.newItem)}\n            disabled={!this.state.newItem.length}\n            className=\"add-btn\">\n              Add todo\n            </button>\n            <div className=\"list\">\n                <ul>\n                  {this.state.list.map(item => {\n                    return(\n                      <li key={item.id}>\n                        <input\n                        type=\"checkbox\"\n                        name=\"idDone\"\n                        checked={item.isDone}\n                        \n                        />\n                        {item.value}\n                        <button \n                        className=\"btn\"\n                        onClick={() => this.deleteItem(item.id)}\n                        >Delete</button>\n                      </li>\n                    );\n                  })}\n                  <li>\n                    <input type=\"checkbox\" name=\"\" id=\"\" />\n                    \n                    <button className=\"button\">Delete</button>\n                  </li>\n                </ul>\n            </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}